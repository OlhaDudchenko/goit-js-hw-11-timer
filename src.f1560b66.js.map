{"version":3,"sources":["index.js"],"names":["CountdownTimer","constructor","selector","targetDate","timeContainer","document","querySelector","timerList","children","days","firstElementChild","hours","mins","secs","interval","start","setInterval","currentTime","Date","now","time","getTimeComponent","stop","innerHTML","pad","Math","floor","clearInterval","value","String","padStart","console","log"],"mappings":";;;AAmDC,aAnDD,QAAA,oBAGA,MAAMA,EAEJC,aAAY,SAAEC,EAAF,WAAYC,IACjBD,KAAAA,SAAWA,EACXC,KAAAA,WAAaA,EACbC,KAAAA,cAAgBC,SAASC,cAAc,KAAKJ,UAC5CK,KAAAA,UAAY,KAAKH,cAAcI,SAC/BC,KAAAA,KAAO,KAAKF,UAAU,GAAGG,kBACzBC,KAAAA,MAAQ,KAAKJ,UAAU,GAAGG,kBAC1BE,KAAAA,KAAO,KAAKL,UAAU,GAAGG,kBACzBG,KAAAA,KAAO,KAAKN,UAAU,GAAGG,kBAEzBI,KAAAA,SAAW,KACXC,KAAAA,QAEPA,QAEOD,KAAAA,SAASE,YAAY,KAClBC,MAAAA,EAAcC,KAAKC,MACnBC,EAAO,KAAKjB,WAAac,EAC1BI,KAAAA,iBAAiBD,GACjBE,KAAAA,KAAKF,IACT,KAILC,iBAAiBD,GAEVX,KAAAA,KAAKc,UAAY,KAAKC,IAAIC,KAAKC,MAAMN,EAAQ,QAC7CT,KAAAA,MAAMY,UAAY,KAAKC,IAAIC,KAAKC,MAAON,EAAQ,MAAyB,OACxER,KAAAA,KAAKW,UAAY,KAAKC,IAAIC,KAAKC,MAAON,EAAQ,KAAoB,MAClEP,KAAAA,KAAKU,UAAY,KAAKC,IAAIC,KAAKC,MAAON,EAAQ,IAAc,MAGnEE,KAAKF,GACCA,EAAO,IAETO,cAAc,KAAKb,UACdV,KAAAA,cAAcmB,UAAY,gBAInCC,IAAII,GACGC,OAAAA,OAAOD,GAAOE,SAAS,EAAE,MAKjCC,QAAQC,IAAI,IAAIhC,EAAe,CAC9BE,SAAU,WACVC,WAAY,IAAIe,KAAK","file":"src.f1560b66.js","sourceRoot":"../src","sourcesContent":["import './sass/main.scss';\n\n\nclass CountdownTimer{\n\n  constructor({ selector, targetDate }) {\n    this.selector = selector;\n    this.targetDate = targetDate;\n    this.timeContainer = document.querySelector(this.selector);\n    this.timerList = this.timeContainer.children;\n    this.days = this.timerList[0].firstElementChild;\n    this.hours = this.timerList[1].firstElementChild;\n    this.mins = this.timerList[2].firstElementChild;\n    this.secs = this.timerList[3].firstElementChild;\n  \n    this.interval = null;\n    this.start();\n   }\n  start() {\n\n    this.interval=setInterval(() => {\n      const currentTime = Date.now();\n      const time = this.targetDate - currentTime;\n      this.getTimeComponent(time);\n      this.stop(time);\n    }, 1000);\n\n\n  }\n  getTimeComponent(time) {\n \n    this.days.innerHTML = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\n    this.hours.innerHTML = this.pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n    this.mins.innerHTML = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n    this.secs.innerHTML = this.pad(Math.floor((time % (1000 * 60)) / 1000));\n   }\n\n  stop(time) {\n    if (time < 0) {\n      \n      clearInterval(this.interval);\n      this.timeContainer.innerHTML = \"TIME EXPIRED\";\n    }\n  }\n\n  pad(value) {\n return  String(value).padStart(2,'0');\n  }\n  \n}\n\n console.log(new CountdownTimer({\n  selector: '#timer-1',\n  targetDate: new Date('Jul 17, 2021'),\n }));\n\n \n\n\n\n\n\n\n"]}